package resource

import (
	"yannscrapy/config"
	"yannscrapy/logger"
	"fmt"

	"github.com/gin-gonic/gin"

	"github.com/swaggo/gin-swagger"

	"github.com/swaggo/files"

	_ "yannscrapy/docs"
)

// docs is generated by Swag CLI, you have to import it.

// InitRouter init api routers
func InitRouter() {

	if config.Conf.Mode != "" {
		gin.SetMode(config.Conf.Mode)
	} else {
		gin.SetMode(gin.ReleaseMode)
	}

	router := gin.Default()
	router.Use(logger.GinLogger(), logger.GinRecovery(true))

	initSwagger(router)
	addRouters(router)

	if config.Conf.Port == 0 {
		config.Conf.Port = 8080
	}
	addr := fmt.Sprintf(":%v", config.Conf.Port)
	router.Run(addr) // listen and serve on 0.0.0.0:8080 (for windows "localhost:8080")
}

func addRouters(router *gin.Engine) {
	v1Group := router.Group("/api/v1")
	{
		// hello group
		helloGroup := v1Group.Group("/hello")
		{
			helloGroup.GET("/", Hello)
		}

		// 日志 group
		logcarrierGroup := v1Group.Group("/logcarrier")
		{
			logcarrierGroup.GET("/", SearchFiles)
			logcarrierGroup.GET("/detail", FileDetail)
			logcarrierGroup.GET("/download", FileDownload)
			logcarrierGroup.GET("/search/files", SearchBaseFile)
			logcarrierGroup.GET("/search/dir", SearchBaseDir)
		}
	}

}

func initSwagger(router *gin.Engine) {
	url := ginSwagger.URL("http://localhost:8080/swagger/doc.json")
	router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler, url))
}
