// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/hello": {
            "get": {
                "description": "返回Hello World",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hello"
                ],
                "summary": "打招呼接口",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/logcarrier": {
            "get": {
                "description": "返回目录下的文件",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logcarrier"
                ],
                "summary": "查询指定目录下的文件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "日志类型",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "目录路径",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "排除文件，支持通配符",
                        "name": "excludes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc(升序)或desc(降序)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/logcarrier/detail": {
            "get": {
                "description": "查询文件内容",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logcarrier"
                ],
                "summary": "查询文件内容",
                "parameters": [
                    {
                        "type": "string",
                        "description": "文件路径",
                        "name": "path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "查询最大行数",
                        "name": "maxline",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "请求行号",
                        "name": "reqline",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "up(上翻)或down(下翻)",
                        "name": "direction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/logcarrier/download": {
            "get": {
                "description": "下载压缩后的文件",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Logcarrier"
                ],
                "summary": "压缩文件下载",
                "parameters": [
                    {
                        "type": "string",
                        "description": "文件路径",
                        "name": "path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "是否压缩，值为true或false",
                        "name": "compress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "压缩类型,默认为zip",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/logcarrier/search/dir": {
            "get": {
                "description": "搜索某个或多个文件的内容",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logcarrier"
                ],
                "summary": "搜索摸个目录下所有文件的内容",
                "parameters": [
                    {
                        "type": "string",
                        "description": "文件完整路径,多个文件用英文逗号分开",
                        "name": "path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "查询字符串",
                        "name": "word",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "最大匹配数",
                        "name": "max-match-num",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc或desc，默认desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "第一个开始搜索的文件",
                        "name": "first-file",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "第一个搜索文件开始查询的行号",
                        "name": "reqline",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "忽略大小写，值为true或false，默认为true",
                        "name": "ignore-case",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/logcarrier/search/files": {
            "get": {
                "description": "搜索某个或多个文件的内容",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logcarrier"
                ],
                "summary": "搜索某个或多个文件的内容",
                "parameters": [
                    {
                        "type": "string",
                        "description": "文件完整路径,多个文件用英文逗号分开",
                        "name": "path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "查询字符串",
                        "name": "word",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "最大匹配数",
                        "name": "max-match-num",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc或desc，默认desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "第一个开始搜索的文件",
                        "name": "first-file",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "第一个搜索文件开始查询的行号",
                        "name": "reqline",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "忽略大小写，值为true或false，默认为true",
                        "name": "ignore-case",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "SuperAgent API Docs",
	Description: "This is bigdata SuperAgent.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
